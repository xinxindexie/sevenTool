unit main;

{$mode objfpc}{$H+}

interface

uses
  windows,Classes, SysUtils, Forms, Controls, Graphics, Dialogs, Menus, ExtCtrls,
  StdCtrls;

type

  { TForm1 }

  TForm1 = class(TForm)
    buttonclickme: TButton;
    Edit1: TEdit;
    Edit10: TEdit;
    Edit11: TEdit;
    Edit12: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit5: TEdit;
    Edit6: TEdit;
    Edit7: TEdit;
    Edit8: TEdit;
    Edit9: TEdit;
    FileMenu: TMenuItem;
    regionshot: TMenuItem;
    showImage: TImage;
    Label1: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    MainMenu1: TMainMenu;
    MenuItem3: TMenuItem;
    MenuItem5: TMenuItem;
    MenuItem6: TMenuItem;
    screenshot: TMenuItem;
    ToolMenu: TMenuItem;
    procedure buttonclickmeClick(Sender: TObject);
    procedure FileMenuClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Label1Click(Sender: TObject);
    procedure regionshotClick(Sender: TObject);
    procedure MenuItem2Click(Sender: TObject);
    procedure MenuItem3Click(Sender: TObject);
    procedure MenuItem6Click(Sender: TObject);
    procedure screenshotClick(Sender: TObject);
    procedure showImageMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
  private

  public

  end;

var
  Form1: TForm1;

implementation

{$R *.lfm}

{ TForm1 }

procedure GetScreen(a:Integer;b:Integer;c:Integer;d:Integer;var bmp: TBitMap);  //截取全屏
var
  DC: HDC;
  MyCanvas: TCanvas;
  MyRect: TRect;
  Tname:  String;
begin
  DC:= GetWindowDC(0);
  MyCanvas:= TCanvas.Create;
  try
    MyCanvas.Handle:= DC;
    MyRect:= Rect(a, b, c, d);
    bmp:= TBitMap.Create;
    bmp.PixelFormat:= pf24bit;
    bmp.Width:= MyRect.Right;
    bmp.Height:= MyRect.Bottom;
    bmp.Canvas.CopyRect(MyRect, MyCanvas, MyRect);
    Tname:= FormatDateTime('yyyymmddhhnnsszzz',now());
    bmp.SaveToFile(ExtractFilePath(ParamStr(0))+'snapscreen'+Tname+'.bmp');
  finally
    MyCanvas.Handle:= 0;
    MyCanvas.Free;
    releaseDC(0, DC);
  end;
end;
procedure  GetScreen_mousedown(pt1: TPoint);
begin
   GetCursorPos(pt1);
   ShowMessage(Format('API 函数 GetCursorPos: x=%d; y=%d', [pt1.X, pt1.Y]));
end;

procedure  GetScreen_mousemove(pt1: TPoint);
begin
   GetCursorPos(pt1);
end;

procedure  GetScreen_mouseup(pt1: TPoint);
begin
   GetCursorPos(pt1);
end;

procedure TForm1.MenuItem2Click(Sender: TObject);
begin

end;

procedure TForm1.MenuItem3Click(Sender: TObject);
begin

end;

procedure TForm1.MenuItem6Click(Sender: TObject);
begin

end;

procedure TForm1.screenshotClick(Sender: TObject);
var
    bmp: TBitMap;
begin
  // showmessage('hello world');
  // edit1.Text:=edit1.Text+'p';
  sendmessage(form1.WindowHandle,WM_SYSCOMMAND,SC_ICON,0);//窗体最小化  任务栏中
   // form1.WindowState :=  wsMaximized;//窗体最大化
   // form1.WindowState :=  wsminimized;//窗体最小化到 任务栏上方
   // form1.WindowState :=  wsnormal;//窗体正常化
   sleep(200);
   bmp:= TBitMap.Create;
   GetScreen(0,0,Screen.Width, Screen.Height,bmp);
   showImage.Picture:= TPicture(bmp);
   bmp.Free;
   form1.WindowState :=  wsnormal;
end;

procedure TForm1.showImageMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  form1.WindowState :=  wsnormal;
end;

procedure TForm1.FileMenuClick(Sender: TObject);
begin

end;

procedure TForm1.FormCreate(Sender: TObject);
begin

end;

procedure TForm1.Label1Click(Sender: TObject);
begin

end;

procedure TForm1.regionshotClick(Sender: TObject);
var
    bmp: TBitMap;
    pt1: TPoint;
    pt2: TPoint;
    a,b,c,d: Integer;

    Mycan: Tcanvas;
    R: TRect;
    DrawPos: TPoint;
    MyCursor: TIcon;
    hld: hwnd;
    Threadld: DWORD;
    mp: TPoint;
    Cursorx, Cursory: integer;
    pIconInfo: TIconInfo;
    form2:TForm;
    shotImage: TImage;
begin
    sendmessage(form1.WindowHandle,WM_SYSCOMMAND,SC_ICON,0);//窗体最小化  任务栏中
     // form1.WindowState :=  wsMaximized;//窗体最大化
     // form1.WindowState :=  wsminimized;//窗体最小化到 任务栏上方
     // form1.WindowState :=  wsnormal;//窗体正常化
     sleep(200);

    bmp:= TBitMap.Create;
    GetScreen(0, 0,Screen.Width, Screen.Height,bmp);

    // form1.WindowState :=  wsMaximized;//窗体最大化
    self.BorderStyle := bsNone;

    // showImage.Picture:= TPicture(bmp);

    form2:=TForm.Create(Application); //创建窗体
    form2.Show; //显示窗体
    form2.width:=screen.width;
    form2.height:=screen.height;
    form2.Top := 0;
    form2.Left := 0;
    form2.BorderStyle := bsNone;
    shotImage := TImage.Create(Self);
    shotImage.Parent := form2; //定义它的父窗体
    shotImage.Left:= 0;
    shotImage.Top:= 0;
    shotImage.Height:= Screen.Height;
    shotImage.Width:= Screen.Width;
    shotImage.Picture:= TPicture(bmp);
    shotImage.OnMouseDown:=GetScreen_mousedown;
    // GetCursorPos(pt1); {这是获取的相对于屏幕的坐标}
    // pt1 := ScreenToClient(pt1); {转换成本地坐标}
    // ShowMessage(Format('API 函数 GetCursorPos: x=%d; y=%d', [pt1.X, pt1.Y]));

    // GetCursorPos(pt2); {这是获取的相对于屏幕的坐标}
    // pt2 := ScreenToClient(pt2); {转换成本地坐标}
    // ShowMessage(Format('API 函数 GetCursorPos: x=%d; y=%d', [pt2.X, pt2.Y]));

    bmp.Free;
    // form1.WindowState :=  wsnormal;
end;
  
procedure snapscreen(a,b,c,d:Integer);
var
bmpscreen:Tbitmap;
jpegscreen:Tjpegimage;
FullscreenCanvas:TCanvas;
dc:HDC;
sourceRect, destRect: TRect;
begin
try
dc:=getdc(0);
fullscreencanvas:=Tcanvas.Create;
fullscreencanvas.Handle:=dc;
bmpscreen:=Tbitmap.create;
bmpscreen.Width :=c-a;
bmpscreen.Height :=d-b;
sourcerect:=rect(0,0,c-a ,d-b );
destrect:= rect(a,b,c,d);
bmpscreen.Canvas.CopyRect(sourcerect,fullscreenCanvas,destrect);
jpegscreen:=Tjpegimage.Create ;
jpegscreen.Assign (bmpscreen);
jpegscreen.CompressionQuality:=100;
jpegscreen.SaveToFile(ExtractFilePath(ParamStr(0))+'snapscreen.jpg');
FullscreenCanvas.Free;
bmpscreen.Free;
jpegscreen.Free ;
ReleaseDC(0, DC);
except
end;
end;

procedure TForm1.buttonclickmeClick(Sender: TObject);

begin
    sendmessage(form1.WindowHandle,WM_SYSCOMMAND,SC_ICON,0);//窗体最小化  任务栏中

end;

end.

